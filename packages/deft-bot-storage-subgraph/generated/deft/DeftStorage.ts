// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BulkMarkedAsBot extends ethereum.Event {
  get params(): BulkMarkedAsBot__Params {
    return new BulkMarkedAsBot__Params(this);
  }
}

export class BulkMarkedAsBot__Params {
  _event: BulkMarkedAsBot;

  constructor(event: BulkMarkedAsBot) {
    this._event = event;
  }

  get addrs(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }
}

export class MarkedAsBot extends ethereum.Event {
  get params(): MarkedAsBot__Params {
    return new MarkedAsBot__Params(this);
  }
}

export class MarkedAsBot__Params {
  _event: MarkedAsBot;

  constructor(event: MarkedAsBot) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MarkedAsDeftEthPair extends ethereum.Event {
  get params(): MarkedAsDeftEthPair__Params {
    return new MarkedAsDeftEthPair__Params(this);
  }
}

export class MarkedAsDeftEthPair__Params {
  _event: MarkedAsDeftEthPair;

  constructor(event: MarkedAsDeftEthPair) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get value(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class MarkedAsExcludedFromBalance extends ethereum.Event {
  get params(): MarkedAsExcludedFromBalance__Params {
    return new MarkedAsExcludedFromBalance__Params(this);
  }
}

export class MarkedAsExcludedFromBalance__Params {
  _event: MarkedAsExcludedFromBalance;

  constructor(event: MarkedAsExcludedFromBalance) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get value(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class MarkedAsHuman extends ethereum.Event {
  get params(): MarkedAsHuman__Params {
    return new MarkedAsHuman__Params(this);
  }
}

export class MarkedAsHuman__Params {
  _event: MarkedAsHuman;

  constructor(event: MarkedAsHuman) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get value(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class MarkedAsNotBot extends ethereum.Event {
  get params(): MarkedAsNotBot__Params {
    return new MarkedAsNotBot__Params(this);
  }
}

export class MarkedAsNotBot__Params {
  _event: MarkedAsNotBot;

  constructor(event: MarkedAsNotBot) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class DeftStorage__isHumanTransactionResultOutputStruct extends ethereum.Tuple {
  get isHumanTransaction(): boolean {
    return this[0].toBoolean();
  }

  get isBuy(): boolean {
    return this[1].toBoolean();
  }

  get isSell(): boolean {
    return this[2].toBoolean();
  }
}

export class DeftStorage extends ethereum.SmartContract {
  static bind(address: Address): DeftStorage {
    return new DeftStorage("DeftStorage", address);
  }

  ROLE_ADMIN(): Bytes {
    let result = super.call("ROLE_ADMIN", "ROLE_ADMIN():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ROLE_ADMIN(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ROLE_ADMIN", "ROLE_ADMIN():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getAddress(_key: Bytes): Address {
    let result = super.call("getAddress", "getAddress(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(_key)
    ]);

    return result[0].toAddress();
  }

  try_getAddress(_key: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall("getAddress", "getAddress(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(_key)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getBool(_key: Bytes): boolean {
    let result = super.call("getBool", "getBool(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(_key)
    ]);

    return result[0].toBoolean();
  }

  try_getBool(_key: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall("getBool", "getBool(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(_key)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getBuyTimestamp(tokenAddr: Address, addr: Address): BigInt {
    let result = super.call(
      "getBuyTimestamp",
      "getBuyTimestamp(address,address):(uint256)",
      [ethereum.Value.fromAddress(tokenAddr), ethereum.Value.fromAddress(addr)]
    );

    return result[0].toBigInt();
  }

  try_getBuyTimestamp(
    tokenAddr: Address,
    addr: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getBuyTimestamp",
      "getBuyTimestamp(address,address):(uint256)",
      [ethereum.Value.fromAddress(tokenAddr), ethereum.Value.fromAddress(addr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getBytes(_key: Bytes): Bytes {
    let result = super.call("getBytes", "getBytes(bytes32):(bytes)", [
      ethereum.Value.fromFixedBytes(_key)
    ]);

    return result[0].toBytes();
  }

  try_getBytes(_key: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall("getBytes", "getBytes(bytes32):(bytes)", [
      ethereum.Value.fromFixedBytes(_key)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getBytes32(_key: Bytes): Bytes {
    let result = super.call("getBytes32", "getBytes32(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(_key)
    ]);

    return result[0].toBytes();
  }

  try_getBytes32(_key: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall("getBytes32", "getBytes32(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(_key)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getInt(_key: Bytes): BigInt {
    let result = super.call("getInt", "getInt(bytes32):(int256)", [
      ethereum.Value.fromFixedBytes(_key)
    ]);

    return result[0].toBigInt();
  }

  try_getInt(_key: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getInt", "getInt(bytes32):(int256)", [
      ethereum.Value.fromFixedBytes(_key)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getString(_key: Bytes): string {
    let result = super.call("getString", "getString(bytes32):(string)", [
      ethereum.Value.fromFixedBytes(_key)
    ]);

    return result[0].toString();
  }

  try_getString(_key: Bytes): ethereum.CallResult<string> {
    let result = super.tryCall("getString", "getString(bytes32):(string)", [
      ethereum.Value.fromFixedBytes(_key)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getUint(_key: Bytes): BigInt {
    let result = super.call("getUint", "getUint(bytes32):(uint256)", [
      ethereum.Value.fromFixedBytes(_key)
    ]);

    return result[0].toBigInt();
  }

  try_getUint(_key: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getUint", "getUint(bytes32):(uint256)", [
      ethereum.Value.fromFixedBytes(_key)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isBotAddress(addr: Address): boolean {
    let result = super.call("isBotAddress", "isBotAddress(address):(bool)", [
      ethereum.Value.fromAddress(addr)
    ]);

    return result[0].toBoolean();
  }

  try_isBotAddress(addr: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isBotAddress", "isBotAddress(address):(bool)", [
      ethereum.Value.fromAddress(addr)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isExcludedFromBalance(addr: Address): boolean {
    let result = super.call(
      "isExcludedFromBalance",
      "isExcludedFromBalance(address):(bool)",
      [ethereum.Value.fromAddress(addr)]
    );

    return result[0].toBoolean();
  }

  try_isExcludedFromBalance(addr: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isExcludedFromBalance",
      "isExcludedFromBalance(address):(bool)",
      [ethereum.Value.fromAddress(addr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isHumanTransaction(
    tokenAddr: Address,
    sender: Address,
    recipient: Address
  ): DeftStorage__isHumanTransactionResultOutputStruct {
    let result = super.call(
      "isHumanTransaction",
      "isHumanTransaction(address,address,address):((bool,bool,bool))",
      [
        ethereum.Value.fromAddress(tokenAddr),
        ethereum.Value.fromAddress(sender),
        ethereum.Value.fromAddress(recipient)
      ]
    );

    return result[0].toTuple() as DeftStorage__isHumanTransactionResultOutputStruct;
  }

  try_isHumanTransaction(
    tokenAddr: Address,
    sender: Address,
    recipient: Address
  ): ethereum.CallResult<DeftStorage__isHumanTransactionResultOutputStruct> {
    let result = super.tryCall(
      "isHumanTransaction",
      "isHumanTransaction(address,address,address):((bool,bool,bool))",
      [
        ethereum.Value.fromAddress(tokenAddr),
        ethereum.Value.fromAddress(sender),
        ethereum.Value.fromAddress(recipient)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as DeftStorage__isHumanTransactionResultOutputStruct
    );
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BulkMarkAddressAsBotCall extends ethereum.Call {
  get inputs(): BulkMarkAddressAsBotCall__Inputs {
    return new BulkMarkAddressAsBotCall__Inputs(this);
  }

  get outputs(): BulkMarkAddressAsBotCall__Outputs {
    return new BulkMarkAddressAsBotCall__Outputs(this);
  }
}

export class BulkMarkAddressAsBotCall__Inputs {
  _call: BulkMarkAddressAsBotCall;

  constructor(call: BulkMarkAddressAsBotCall) {
    this._call = call;
  }

  get addrs(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class BulkMarkAddressAsBotCall__Outputs {
  _call: BulkMarkAddressAsBotCall;

  constructor(call: BulkMarkAddressAsBotCall) {
    this._call = call;
  }
}

export class DeleteAddressCall extends ethereum.Call {
  get inputs(): DeleteAddressCall__Inputs {
    return new DeleteAddressCall__Inputs(this);
  }

  get outputs(): DeleteAddressCall__Outputs {
    return new DeleteAddressCall__Outputs(this);
  }
}

export class DeleteAddressCall__Inputs {
  _call: DeleteAddressCall;

  constructor(call: DeleteAddressCall) {
    this._call = call;
  }

  get _key(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class DeleteAddressCall__Outputs {
  _call: DeleteAddressCall;

  constructor(call: DeleteAddressCall) {
    this._call = call;
  }
}

export class DeleteBoolCall extends ethereum.Call {
  get inputs(): DeleteBoolCall__Inputs {
    return new DeleteBoolCall__Inputs(this);
  }

  get outputs(): DeleteBoolCall__Outputs {
    return new DeleteBoolCall__Outputs(this);
  }
}

export class DeleteBoolCall__Inputs {
  _call: DeleteBoolCall;

  constructor(call: DeleteBoolCall) {
    this._call = call;
  }

  get _key(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class DeleteBoolCall__Outputs {
  _call: DeleteBoolCall;

  constructor(call: DeleteBoolCall) {
    this._call = call;
  }
}

export class DeleteBytesCall extends ethereum.Call {
  get inputs(): DeleteBytesCall__Inputs {
    return new DeleteBytesCall__Inputs(this);
  }

  get outputs(): DeleteBytesCall__Outputs {
    return new DeleteBytesCall__Outputs(this);
  }
}

export class DeleteBytesCall__Inputs {
  _call: DeleteBytesCall;

  constructor(call: DeleteBytesCall) {
    this._call = call;
  }

  get _key(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class DeleteBytesCall__Outputs {
  _call: DeleteBytesCall;

  constructor(call: DeleteBytesCall) {
    this._call = call;
  }
}

export class DeleteBytes32Call extends ethereum.Call {
  get inputs(): DeleteBytes32Call__Inputs {
    return new DeleteBytes32Call__Inputs(this);
  }

  get outputs(): DeleteBytes32Call__Outputs {
    return new DeleteBytes32Call__Outputs(this);
  }
}

export class DeleteBytes32Call__Inputs {
  _call: DeleteBytes32Call;

  constructor(call: DeleteBytes32Call) {
    this._call = call;
  }

  get _key(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class DeleteBytes32Call__Outputs {
  _call: DeleteBytes32Call;

  constructor(call: DeleteBytes32Call) {
    this._call = call;
  }
}

export class DeleteIntCall extends ethereum.Call {
  get inputs(): DeleteIntCall__Inputs {
    return new DeleteIntCall__Inputs(this);
  }

  get outputs(): DeleteIntCall__Outputs {
    return new DeleteIntCall__Outputs(this);
  }
}

export class DeleteIntCall__Inputs {
  _call: DeleteIntCall;

  constructor(call: DeleteIntCall) {
    this._call = call;
  }

  get _key(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class DeleteIntCall__Outputs {
  _call: DeleteIntCall;

  constructor(call: DeleteIntCall) {
    this._call = call;
  }
}

export class DeleteStringCall extends ethereum.Call {
  get inputs(): DeleteStringCall__Inputs {
    return new DeleteStringCall__Inputs(this);
  }

  get outputs(): DeleteStringCall__Outputs {
    return new DeleteStringCall__Outputs(this);
  }
}

export class DeleteStringCall__Inputs {
  _call: DeleteStringCall;

  constructor(call: DeleteStringCall) {
    this._call = call;
  }

  get _key(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class DeleteStringCall__Outputs {
  _call: DeleteStringCall;

  constructor(call: DeleteStringCall) {
    this._call = call;
  }
}

export class DeleteUintCall extends ethereum.Call {
  get inputs(): DeleteUintCall__Inputs {
    return new DeleteUintCall__Inputs(this);
  }

  get outputs(): DeleteUintCall__Outputs {
    return new DeleteUintCall__Outputs(this);
  }
}

export class DeleteUintCall__Inputs {
  _call: DeleteUintCall;

  constructor(call: DeleteUintCall) {
    this._call = call;
  }

  get _key(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class DeleteUintCall__Outputs {
  _call: DeleteUintCall;

  constructor(call: DeleteUintCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class GrantRolesBulkCall extends ethereum.Call {
  get inputs(): GrantRolesBulkCall__Inputs {
    return new GrantRolesBulkCall__Inputs(this);
  }

  get outputs(): GrantRolesBulkCall__Outputs {
    return new GrantRolesBulkCall__Outputs(this);
  }
}

export class GrantRolesBulkCall__Inputs {
  _call: GrantRolesBulkCall;

  constructor(call: GrantRolesBulkCall) {
    this._call = call;
  }

  get roles(): Array<GrantRolesBulkCallRolesStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      GrantRolesBulkCallRolesStruct
    >();
  }
}

export class GrantRolesBulkCall__Outputs {
  _call: GrantRolesBulkCall;

  constructor(call: GrantRolesBulkCall) {
    this._call = call;
  }
}

export class GrantRolesBulkCallRolesStruct extends ethereum.Tuple {
  get role(): Bytes {
    return this[0].toBytes();
  }

  get addr(): Address {
    return this[1].toAddress();
  }
}

export class IsHumanTransactionCall extends ethereum.Call {
  get inputs(): IsHumanTransactionCall__Inputs {
    return new IsHumanTransactionCall__Inputs(this);
  }

  get outputs(): IsHumanTransactionCall__Outputs {
    return new IsHumanTransactionCall__Outputs(this);
  }
}

export class IsHumanTransactionCall__Inputs {
  _call: IsHumanTransactionCall;

  constructor(call: IsHumanTransactionCall) {
    this._call = call;
  }

  get tokenAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get sender(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get recipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class IsHumanTransactionCall__Outputs {
  _call: IsHumanTransactionCall;

  constructor(call: IsHumanTransactionCall) {
    this._call = call;
  }

  get output(): IsHumanTransactionCallOutputStruct {
    return this._call.outputValues[0].value.toTuple() as IsHumanTransactionCallOutputStruct;
  }
}

export class IsHumanTransactionCallOutputStruct extends ethereum.Tuple {
  get isHumanTransaction(): boolean {
    return this[0].toBoolean();
  }

  get isBuy(): boolean {
    return this[1].toBoolean();
  }

  get isSell(): boolean {
    return this[2].toBoolean();
  }
}

export class MarkAddressAsBotCall extends ethereum.Call {
  get inputs(): MarkAddressAsBotCall__Inputs {
    return new MarkAddressAsBotCall__Inputs(this);
  }

  get outputs(): MarkAddressAsBotCall__Outputs {
    return new MarkAddressAsBotCall__Outputs(this);
  }
}

export class MarkAddressAsBotCall__Inputs {
  _call: MarkAddressAsBotCall;

  constructor(call: MarkAddressAsBotCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class MarkAddressAsBotCall__Outputs {
  _call: MarkAddressAsBotCall;

  constructor(call: MarkAddressAsBotCall) {
    this._call = call;
  }
}

export class MarkAddressAsExcludedFromBalanceCall extends ethereum.Call {
  get inputs(): MarkAddressAsExcludedFromBalanceCall__Inputs {
    return new MarkAddressAsExcludedFromBalanceCall__Inputs(this);
  }

  get outputs(): MarkAddressAsExcludedFromBalanceCall__Outputs {
    return new MarkAddressAsExcludedFromBalanceCall__Outputs(this);
  }
}

export class MarkAddressAsExcludedFromBalanceCall__Inputs {
  _call: MarkAddressAsExcludedFromBalanceCall;

  constructor(call: MarkAddressAsExcludedFromBalanceCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class MarkAddressAsExcludedFromBalanceCall__Outputs {
  _call: MarkAddressAsExcludedFromBalanceCall;

  constructor(call: MarkAddressAsExcludedFromBalanceCall) {
    this._call = call;
  }
}

export class MarkAddressAsHumanCall extends ethereum.Call {
  get inputs(): MarkAddressAsHumanCall__Inputs {
    return new MarkAddressAsHumanCall__Inputs(this);
  }

  get outputs(): MarkAddressAsHumanCall__Outputs {
    return new MarkAddressAsHumanCall__Outputs(this);
  }
}

export class MarkAddressAsHumanCall__Inputs {
  _call: MarkAddressAsHumanCall;

  constructor(call: MarkAddressAsHumanCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class MarkAddressAsHumanCall__Outputs {
  _call: MarkAddressAsHumanCall;

  constructor(call: MarkAddressAsHumanCall) {
    this._call = call;
  }
}

export class MarkAddressAsNotBotCall extends ethereum.Call {
  get inputs(): MarkAddressAsNotBotCall__Inputs {
    return new MarkAddressAsNotBotCall__Inputs(this);
  }

  get outputs(): MarkAddressAsNotBotCall__Outputs {
    return new MarkAddressAsNotBotCall__Outputs(this);
  }
}

export class MarkAddressAsNotBotCall__Inputs {
  _call: MarkAddressAsNotBotCall;

  constructor(call: MarkAddressAsNotBotCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class MarkAddressAsNotBotCall__Outputs {
  _call: MarkAddressAsNotBotCall;

  constructor(call: MarkAddressAsNotBotCall) {
    this._call = call;
  }
}

export class MarkPairAsDeftEthPairCall extends ethereum.Call {
  get inputs(): MarkPairAsDeftEthPairCall__Inputs {
    return new MarkPairAsDeftEthPairCall__Inputs(this);
  }

  get outputs(): MarkPairAsDeftEthPairCall__Outputs {
    return new MarkPairAsDeftEthPairCall__Outputs(this);
  }
}

export class MarkPairAsDeftEthPairCall__Inputs {
  _call: MarkPairAsDeftEthPairCall;

  constructor(call: MarkPairAsDeftEthPairCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class MarkPairAsDeftEthPairCall__Outputs {
  _call: MarkPairAsDeftEthPairCall;

  constructor(call: MarkPairAsDeftEthPairCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetAddressCall extends ethereum.Call {
  get inputs(): SetAddressCall__Inputs {
    return new SetAddressCall__Inputs(this);
  }

  get outputs(): SetAddressCall__Outputs {
    return new SetAddressCall__Outputs(this);
  }
}

export class SetAddressCall__Inputs {
  _call: SetAddressCall;

  constructor(call: SetAddressCall) {
    this._call = call;
  }

  get _key(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _value(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetAddressCall__Outputs {
  _call: SetAddressCall;

  constructor(call: SetAddressCall) {
    this._call = call;
  }
}

export class SetBoolCall extends ethereum.Call {
  get inputs(): SetBoolCall__Inputs {
    return new SetBoolCall__Inputs(this);
  }

  get outputs(): SetBoolCall__Outputs {
    return new SetBoolCall__Outputs(this);
  }
}

export class SetBoolCall__Inputs {
  _call: SetBoolCall;

  constructor(call: SetBoolCall) {
    this._call = call;
  }

  get _key(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _value(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetBoolCall__Outputs {
  _call: SetBoolCall;

  constructor(call: SetBoolCall) {
    this._call = call;
  }
}

export class SetBytesCall extends ethereum.Call {
  get inputs(): SetBytesCall__Inputs {
    return new SetBytesCall__Inputs(this);
  }

  get outputs(): SetBytesCall__Outputs {
    return new SetBytesCall__Outputs(this);
  }
}

export class SetBytesCall__Inputs {
  _call: SetBytesCall;

  constructor(call: SetBytesCall) {
    this._call = call;
  }

  get _key(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _value(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SetBytesCall__Outputs {
  _call: SetBytesCall;

  constructor(call: SetBytesCall) {
    this._call = call;
  }
}

export class SetBytes32Call extends ethereum.Call {
  get inputs(): SetBytes32Call__Inputs {
    return new SetBytes32Call__Inputs(this);
  }

  get outputs(): SetBytes32Call__Outputs {
    return new SetBytes32Call__Outputs(this);
  }
}

export class SetBytes32Call__Inputs {
  _call: SetBytes32Call;

  constructor(call: SetBytes32Call) {
    this._call = call;
  }

  get _key(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _value(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SetBytes32Call__Outputs {
  _call: SetBytes32Call;

  constructor(call: SetBytes32Call) {
    this._call = call;
  }
}

export class SetIntCall extends ethereum.Call {
  get inputs(): SetIntCall__Inputs {
    return new SetIntCall__Inputs(this);
  }

  get outputs(): SetIntCall__Outputs {
    return new SetIntCall__Outputs(this);
  }
}

export class SetIntCall__Inputs {
  _call: SetIntCall;

  constructor(call: SetIntCall) {
    this._call = call;
  }

  get _key(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _value(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetIntCall__Outputs {
  _call: SetIntCall;

  constructor(call: SetIntCall) {
    this._call = call;
  }
}

export class SetStringCall extends ethereum.Call {
  get inputs(): SetStringCall__Inputs {
    return new SetStringCall__Inputs(this);
  }

  get outputs(): SetStringCall__Outputs {
    return new SetStringCall__Outputs(this);
  }
}

export class SetStringCall__Inputs {
  _call: SetStringCall;

  constructor(call: SetStringCall) {
    this._call = call;
  }

  get _key(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _value(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetStringCall__Outputs {
  _call: SetStringCall;

  constructor(call: SetStringCall) {
    this._call = call;
  }
}

export class SetUintCall extends ethereum.Call {
  get inputs(): SetUintCall__Inputs {
    return new SetUintCall__Inputs(this);
  }

  get outputs(): SetUintCall__Outputs {
    return new SetUintCall__Outputs(this);
  }
}

export class SetUintCall__Inputs {
  _call: SetUintCall;

  constructor(call: SetUintCall) {
    this._call = call;
  }

  get _key(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _value(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetUintCall__Outputs {
  _call: SetUintCall;

  constructor(call: SetUintCall) {
    this._call = call;
  }
}

export class UpdateBuyTimestampCall extends ethereum.Call {
  get inputs(): UpdateBuyTimestampCall__Inputs {
    return new UpdateBuyTimestampCall__Inputs(this);
  }

  get outputs(): UpdateBuyTimestampCall__Outputs {
    return new UpdateBuyTimestampCall__Outputs(this);
  }
}

export class UpdateBuyTimestampCall__Inputs {
  _call: UpdateBuyTimestampCall;

  constructor(call: UpdateBuyTimestampCall) {
    this._call = call;
  }

  get tokenAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get addr(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get newBuyTimestamp(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UpdateBuyTimestampCall__Outputs {
  _call: UpdateBuyTimestampCall;

  constructor(call: UpdateBuyTimestampCall) {
    this._call = call;
  }
}

export class UpdateTransactionCall extends ethereum.Call {
  get inputs(): UpdateTransactionCall__Inputs {
    return new UpdateTransactionCall__Inputs(this);
  }

  get outputs(): UpdateTransactionCall__Outputs {
    return new UpdateTransactionCall__Outputs(this);
  }
}

export class UpdateTransactionCall__Inputs {
  _call: UpdateTransactionCall;

  constructor(call: UpdateTransactionCall) {
    this._call = call;
  }

  get tokenAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get sender(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get recipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class UpdateTransactionCall__Outputs {
  _call: UpdateTransactionCall;

  constructor(call: UpdateTransactionCall) {
    this._call = call;
  }
}
