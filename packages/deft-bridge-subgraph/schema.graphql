# scalar Bytes
# scalar BigDecimal
# scalar BigInt

enum TransferStatus {
  Created
  Burned
  Approved
  Executed
}

enum ProofType {
  Mint
  Burn
}

type Proof @entity {
  id: ID!

  type: ProofType!
  nonce: BigInt

  src: BigInt
  dest: BigInt

  token: String!

  sender: Bytes!

  amount: BigDecimal!
  fee: BigDecimal!

  txFee: BigDecimal!
  txHash: Bytes!

  logIndex: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
}

type BridgeTransfer @entity {
  id: ID!
  status: TransferStatus!
}

# type BridgeTransfer @entity {
#   id: ID!

#   status: TransferStatus!

#   sender: Bytes!
#   txBurnHash: Bytes!
#   txMintHash: Bytes!

#   amountBurn: BigDecimal!
#   amountMint: BigDecimal!

#   mintFee: BigDecimal!

#   transactionFee: BigDecimal!

#   logIndex: BigInt!
#   blockNumber: BigInt!
#   timestamp: BigInt!
# }

type Global @entity {
  id: ID!
  # currentFee: BigDecimal!
  approvedCount: BigInt!

  mintedCount: BigInt!
  mintedAmount: BigDecimal!

  burnedCount: BigInt!
  burnedAmount: BigDecimal!

  chargedFee: BigDecimal!

  recentApprovedProof: String!
}
