// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class BurnHumanAddress extends ethereum.Event {
  get params(): BurnHumanAddress__Params {
    return new BurnHumanAddress__Params(this);
  }
}

export class BurnHumanAddress__Params {
  _event: BurnHumanAddress;

  constructor(event: BurnHumanAddress) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class BurnedByBridge extends ethereum.Event {
  get params(): BurnedByBridge__Params {
    return new BurnedByBridge__Params(this);
  }
}

export class BurnedByBridge__Params {
  _event: BurnedByBridge;

  constructor(event: BurnedByBridge) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ClaimedReferralRewards extends ethereum.Event {
  get params(): ClaimedReferralRewards__Params {
    return new ClaimedReferralRewards__Params(this);
  }
}

export class ClaimedReferralRewards__Params {
  _event: ClaimedReferralRewards;

  constructor(event: ClaimedReferralRewards) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MintHumanAddress extends ethereum.Event {
  get params(): MintHumanAddress__Params {
    return new MintHumanAddress__Params(this);
  }
}

export class MintHumanAddress__Params {
  _event: MintHumanAddress;

  constructor(event: MintHumanAddress) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MintedByBridge extends ethereum.Event {
  get params(): MintedByBridge__Params {
    return new MintedByBridge__Params(this);
  }
}

export class MintedByBridge__Params {
  _event: MintedByBridge;

  constructor(event: MintedByBridge) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TransferCustom extends ethereum.Event {
  get params(): TransferCustom__Params {
    return new TransferCustom__Params(this);
  }
}

export class TransferCustom__Params {
  _event: TransferCustom;

  constructor(event: TransferCustom) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UpdatedUtilsContracts extends ethereum.Event {
  get params(): UpdatedUtilsContracts__Params {
    return new UpdatedUtilsContracts__Params(this);
  }
}

export class UpdatedUtilsContracts__Params {
  _event: UpdatedUtilsContracts;

  constructor(event: UpdatedUtilsContracts) {
    this._event = event;
  }

  get accessSettings(): Array<UpdatedUtilsContractsAccessSettingsStruct> {
    return this._event.parameters[0].value.toTupleArray<
      UpdatedUtilsContractsAccessSettingsStruct
    >();
  }
}

export class UpdatedUtilsContractsAccessSettingsStruct extends ethereum.Tuple {
  get isMinter(): boolean {
    return this[0].toBoolean();
  }

  get isBurner(): boolean {
    return this[1].toBoolean();
  }

  get isTransferer(): boolean {
    return this[2].toBoolean();
  }

  get isModerator(): boolean {
    return this[3].toBoolean();
  }

  get isTaxer(): boolean {
    return this[4].toBoolean();
  }

  get addr(): Address {
    return this[5].toAddress();
  }
}

export class VestedAmountClaimed extends ethereum.Event {
  get params(): VestedAmountClaimed__Params {
    return new VestedAmountClaimed__Params(this);
  }
}

export class VestedAmountClaimed__Params {
  _event: VestedAmountClaimed;

  constructor(event: VestedAmountClaimed) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class DefiFactoryToken__getTemporaryReferralRealAmountsBulkResultValue0Struct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get realBalance(): BigInt {
    return this[1].toBigInt();
  }
}

export class DefiFactoryToken extends ethereum.SmartContract {
  static bind(address: Address): DefiFactoryToken {
    return new DefiFactoryToken("DefiFactoryToken", address);
  }

  DOMAIN_SEPARATOR(): Bytes {
    let result = super.call(
      "DOMAIN_SEPARATOR",
      "DOMAIN_SEPARATOR():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DOMAIN_SEPARATOR(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DOMAIN_SEPARATOR",
      "DOMAIN_SEPARATOR():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ROLE_ADMIN(): Bytes {
    let result = super.call("ROLE_ADMIN", "ROLE_ADMIN():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ROLE_ADMIN(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ROLE_ADMIN", "ROLE_ADMIN():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ROLE_BURNER(): Bytes {
    let result = super.call("ROLE_BURNER", "ROLE_BURNER():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ROLE_BURNER(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ROLE_BURNER", "ROLE_BURNER():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ROLE_MINTER(): Bytes {
    let result = super.call("ROLE_MINTER", "ROLE_MINTER():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ROLE_MINTER(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ROLE_MINTER", "ROLE_MINTER():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ROLE_MODERATOR(): Bytes {
    let result = super.call("ROLE_MODERATOR", "ROLE_MODERATOR():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ROLE_MODERATOR(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "ROLE_MODERATOR",
      "ROLE_MODERATOR():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ROLE_TAXER(): Bytes {
    let result = super.call("ROLE_TAXER", "ROLE_TAXER():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ROLE_TAXER(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ROLE_TAXER", "ROLE_TAXER():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ROLE_TRANSFERER(): Bytes {
    let result = super.call(
      "ROLE_TRANSFERER",
      "ROLE_TRANSFERER():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_ROLE_TRANSFERER(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "ROLE_TRANSFERER",
      "ROLE_TRANSFERER():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  allowance(owner: Address, spender: Address): BigInt {
    let result = super.call(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)]
    );

    return result[0].toBigInt();
  }

  try_allowance(owner: Address, spender: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  approve(spender: Address, amount: BigInt): boolean {
    let result = super.call("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBoolean();
  }

  try_approve(spender: Address, amount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  balanceOf(account: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  decimals(): i32 {
    let result = super.call("decimals", "decimals():(uint8)", []);

    return result[0].toI32();
  }

  try_decimals(): ethereum.CallResult<i32> {
    let result = super.tryCall("decimals", "decimals():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  decreaseAllowance(spender: Address, subtractedValue: BigInt): boolean {
    let result = super.call(
      "decreaseAllowance",
      "decreaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(subtractedValue)
      ]
    );

    return result[0].toBoolean();
  }

  try_decreaseAllowance(
    spender: Address,
    subtractedValue: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "decreaseAllowance",
      "decreaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(subtractedValue)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  filterNonZeroReferrals(referrals: Array<Address>): Array<Address> {
    let result = super.call(
      "filterNonZeroReferrals",
      "filterNonZeroReferrals(address[]):(address[])",
      [ethereum.Value.fromAddressArray(referrals)]
    );

    return result[0].toAddressArray();
  }

  try_filterNonZeroReferrals(
    referrals: Array<Address>
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "filterNonZeroReferrals",
      "filterNonZeroReferrals(address[]):(address[])",
      [ethereum.Value.fromAddressArray(referrals)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getCachedReferrerRewards(addr: Address): BigInt {
    let result = super.call(
      "getCachedReferrerRewards",
      "getCachedReferrerRewards(address):(uint256)",
      [ethereum.Value.fromAddress(addr)]
    );

    return result[0].toBigInt();
  }

  try_getCachedReferrerRewards(addr: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCachedReferrerRewards",
      "getCachedReferrerRewards(address):(uint256)",
      [ethereum.Value.fromAddress(addr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCalculatedReferrerRewards(
    addr: Address,
    referrals: Array<Address>
  ): BigInt {
    let result = super.call(
      "getCalculatedReferrerRewards",
      "getCalculatedReferrerRewards(address,address[]):(uint256)",
      [
        ethereum.Value.fromAddress(addr),
        ethereum.Value.fromAddressArray(referrals)
      ]
    );

    return result[0].toBigInt();
  }

  try_getCalculatedReferrerRewards(
    addr: Address,
    referrals: Array<Address>
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCalculatedReferrerRewards",
      "getCalculatedReferrerRewards(address,address[]):(uint256)",
      [
        ethereum.Value.fromAddress(addr),
        ethereum.Value.fromAddressArray(referrals)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getChainId(): BigInt {
    let result = super.call("getChainId", "getChainId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getChainId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getChainId", "getChainId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTemporaryReferralRealAmountsBulk(
    addrs: Array<Address>
  ): Array<
    DefiFactoryToken__getTemporaryReferralRealAmountsBulkResultValue0Struct
  > {
    let result = super.call(
      "getTemporaryReferralRealAmountsBulk",
      "getTemporaryReferralRealAmountsBulk(address[]):((address,uint256)[])",
      [ethereum.Value.fromAddressArray(addrs)]
    );

    return result[0].toTupleArray<
      DefiFactoryToken__getTemporaryReferralRealAmountsBulkResultValue0Struct
    >();
  }

  try_getTemporaryReferralRealAmountsBulk(
    addrs: Array<Address>
  ): ethereum.CallResult<
    Array<
      DefiFactoryToken__getTemporaryReferralRealAmountsBulkResultValue0Struct
    >
  > {
    let result = super.tryCall(
      "getTemporaryReferralRealAmountsBulk",
      "getTemporaryReferralRealAmountsBulk(address[]):((address,uint256)[])",
      [ethereum.Value.fromAddressArray(addrs)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        DefiFactoryToken__getTemporaryReferralRealAmountsBulkResultValue0Struct
      >()
    );
  }

  getUtilsContractAtPos(pos: BigInt): Address {
    let result = super.call(
      "getUtilsContractAtPos",
      "getUtilsContractAtPos(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(pos)]
    );

    return result[0].toAddress();
  }

  try_getUtilsContractAtPos(pos: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getUtilsContractAtPos",
      "getUtilsContractAtPos(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(pos)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getUtilsContractsCount(): BigInt {
    let result = super.call(
      "getUtilsContractsCount",
      "getUtilsContractsCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getUtilsContractsCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getUtilsContractsCount",
      "getUtilsContractsCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  increaseAllowance(spender: Address, addedValue: BigInt): boolean {
    let result = super.call(
      "increaseAllowance",
      "increaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(addedValue)
      ]
    );

    return result[0].toBoolean();
  }

  try_increaseAllowance(
    spender: Address,
    addedValue: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "increaseAllowance",
      "increaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(addedValue)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPaused(): boolean {
    let result = super.call("isPaused", "isPaused():(bool)", []);

    return result[0].toBoolean();
  }

  try_isPaused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPaused", "isPaused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  moderatorTransferFromWhilePaused(
    sender: Address,
    recipient: Address,
    amount: BigInt
  ): boolean {
    let result = super.call(
      "moderatorTransferFromWhilePaused",
      "moderatorTransferFromWhilePaused(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(sender),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );

    return result[0].toBoolean();
  }

  try_moderatorTransferFromWhilePaused(
    sender: Address,
    recipient: Address,
    amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "moderatorTransferFromWhilePaused",
      "moderatorTransferFromWhilePaused(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(sender),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  nonces(owner: Address): BigInt {
    let result = super.call("nonces", "nonces(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);

    return result[0].toBigInt();
  }

  try_nonces(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nonces", "nonces(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  transfer(recipient: Address, amount: BigInt): boolean {
    let result = super.call("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(recipient),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBoolean();
  }

  try_transfer(
    recipient: Address,
    amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(recipient),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  transferFrom(sender: Address, recipient: Address, amount: BigInt): boolean {
    let result = super.call(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(sender),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );

    return result[0].toBoolean();
  }

  try_transferFrom(
    sender: Address,
    recipient: Address,
    amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(sender),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  wasInitialized(): boolean {
    let result = super.call("wasInitialized", "wasInitialized():(bool)", []);

    return result[0].toBoolean();
  }

  try_wasInitialized(): ethereum.CallResult<boolean> {
    let result = super.tryCall("wasInitialized", "wasInitialized():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class BurnByBridgeCall extends ethereum.Call {
  get inputs(): BurnByBridgeCall__Inputs {
    return new BurnByBridgeCall__Inputs(this);
  }

  get outputs(): BurnByBridgeCall__Outputs {
    return new BurnByBridgeCall__Outputs(this);
  }
}

export class BurnByBridgeCall__Inputs {
  _call: BurnByBridgeCall;

  constructor(call: BurnByBridgeCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get desiredAmountToBurn(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BurnByBridgeCall__Outputs {
  _call: BurnByBridgeCall;

  constructor(call: BurnByBridgeCall) {
    this._call = call;
  }
}

export class BurnHumanAddressCall extends ethereum.Call {
  get inputs(): BurnHumanAddressCall__Inputs {
    return new BurnHumanAddressCall__Inputs(this);
  }

  get outputs(): BurnHumanAddressCall__Outputs {
    return new BurnHumanAddressCall__Outputs(this);
  }
}

export class BurnHumanAddressCall__Inputs {
  _call: BurnHumanAddressCall;

  constructor(call: BurnHumanAddressCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get desiredAmountToBurn(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BurnHumanAddressCall__Outputs {
  _call: BurnHumanAddressCall;

  constructor(call: BurnHumanAddressCall) {
    this._call = call;
  }
}

export class ChargeCustomTaxCall extends ethereum.Call {
  get inputs(): ChargeCustomTaxCall__Inputs {
    return new ChargeCustomTaxCall__Inputs(this);
  }

  get outputs(): ChargeCustomTaxCall__Outputs {
    return new ChargeCustomTaxCall__Outputs(this);
  }
}

export class ChargeCustomTaxCall__Inputs {
  _call: ChargeCustomTaxCall;

  constructor(call: ChargeCustomTaxCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ChargeCustomTaxCall__Outputs {
  _call: ChargeCustomTaxCall;

  constructor(call: ChargeCustomTaxCall) {
    this._call = call;
  }
}

export class ClaimReferrerRewardsCall extends ethereum.Call {
  get inputs(): ClaimReferrerRewardsCall__Inputs {
    return new ClaimReferrerRewardsCall__Inputs(this);
  }

  get outputs(): ClaimReferrerRewardsCall__Outputs {
    return new ClaimReferrerRewardsCall__Outputs(this);
  }
}

export class ClaimReferrerRewardsCall__Inputs {
  _call: ClaimReferrerRewardsCall;

  constructor(call: ClaimReferrerRewardsCall) {
    this._call = call;
  }

  get referrals(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class ClaimReferrerRewardsCall__Outputs {
  _call: ClaimReferrerRewardsCall;

  constructor(call: ClaimReferrerRewardsCall) {
    this._call = call;
  }
}

export class DecreaseAllowanceCall extends ethereum.Call {
  get inputs(): DecreaseAllowanceCall__Inputs {
    return new DecreaseAllowanceCall__Inputs(this);
  }

  get outputs(): DecreaseAllowanceCall__Outputs {
    return new DecreaseAllowanceCall__Outputs(this);
  }
}

export class DecreaseAllowanceCall__Inputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get subtractedValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DecreaseAllowanceCall__Outputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class IncreaseAllowanceCall extends ethereum.Call {
  get inputs(): IncreaseAllowanceCall__Inputs {
    return new IncreaseAllowanceCall__Inputs(this);
  }

  get outputs(): IncreaseAllowanceCall__Outputs {
    return new IncreaseAllowanceCall__Outputs(this);
  }
}

export class IncreaseAllowanceCall__Inputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get addedValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IncreaseAllowanceCall__Outputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class InitializeAfterCreate2Call extends ethereum.Call {
  get inputs(): InitializeAfterCreate2Call__Inputs {
    return new InitializeAfterCreate2Call__Inputs(this);
  }

  get outputs(): InitializeAfterCreate2Call__Outputs {
    return new InitializeAfterCreate2Call__Outputs(this);
  }
}

export class InitializeAfterCreate2Call__Inputs {
  _call: InitializeAfterCreate2Call;

  constructor(call: InitializeAfterCreate2Call) {
    this._call = call;
  }

  get __newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeAfterCreate2Call__Outputs {
  _call: InitializeAfterCreate2Call;

  constructor(call: InitializeAfterCreate2Call) {
    this._call = call;
  }
}

export class MintByBridgeCall extends ethereum.Call {
  get inputs(): MintByBridgeCall__Inputs {
    return new MintByBridgeCall__Inputs(this);
  }

  get outputs(): MintByBridgeCall__Outputs {
    return new MintByBridgeCall__Outputs(this);
  }
}

export class MintByBridgeCall__Inputs {
  _call: MintByBridgeCall;

  constructor(call: MintByBridgeCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get desiredAmountToMint(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MintByBridgeCall__Outputs {
  _call: MintByBridgeCall;

  constructor(call: MintByBridgeCall) {
    this._call = call;
  }
}

export class MintHumanAddressCall extends ethereum.Call {
  get inputs(): MintHumanAddressCall__Inputs {
    return new MintHumanAddressCall__Inputs(this);
  }

  get outputs(): MintHumanAddressCall__Outputs {
    return new MintHumanAddressCall__Outputs(this);
  }
}

export class MintHumanAddressCall__Inputs {
  _call: MintHumanAddressCall;

  constructor(call: MintHumanAddressCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get desiredAmountToMint(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MintHumanAddressCall__Outputs {
  _call: MintHumanAddressCall;

  constructor(call: MintHumanAddressCall) {
    this._call = call;
  }
}

export class ModeratorTransferFromWhilePausedCall extends ethereum.Call {
  get inputs(): ModeratorTransferFromWhilePausedCall__Inputs {
    return new ModeratorTransferFromWhilePausedCall__Inputs(this);
  }

  get outputs(): ModeratorTransferFromWhilePausedCall__Outputs {
    return new ModeratorTransferFromWhilePausedCall__Outputs(this);
  }
}

export class ModeratorTransferFromWhilePausedCall__Inputs {
  _call: ModeratorTransferFromWhilePausedCall;

  constructor(call: ModeratorTransferFromWhilePausedCall) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ModeratorTransferFromWhilePausedCall__Outputs {
  _call: ModeratorTransferFromWhilePausedCall;

  constructor(call: ModeratorTransferFromWhilePausedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class PauseContractCall extends ethereum.Call {
  get inputs(): PauseContractCall__Inputs {
    return new PauseContractCall__Inputs(this);
  }

  get outputs(): PauseContractCall__Outputs {
    return new PauseContractCall__Outputs(this);
  }
}

export class PauseContractCall__Inputs {
  _call: PauseContractCall;

  constructor(call: PauseContractCall) {
    this._call = call;
  }
}

export class PauseContractCall__Outputs {
  _call: PauseContractCall;

  constructor(call: PauseContractCall) {
    this._call = call;
  }
}

export class PermitCall extends ethereum.Call {
  get inputs(): PermitCall__Inputs {
    return new PermitCall__Inputs(this);
  }

  get outputs(): PermitCall__Outputs {
    return new PermitCall__Outputs(this);
  }
}

export class PermitCall__Inputs {
  _call: PermitCall;

  constructor(call: PermitCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get spender(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }
}

export class PermitCall__Outputs {
  _call: PermitCall;

  constructor(call: PermitCall) {
    this._call = call;
  }
}

export class RegisterReferralCall extends ethereum.Call {
  get inputs(): RegisterReferralCall__Inputs {
    return new RegisterReferralCall__Inputs(this);
  }

  get outputs(): RegisterReferralCall__Outputs {
    return new RegisterReferralCall__Outputs(this);
  }
}

export class RegisterReferralCall__Inputs {
  _call: RegisterReferralCall;

  constructor(call: RegisterReferralCall) {
    this._call = call;
  }

  get referrer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RegisterReferralCall__Outputs {
  _call: RegisterReferralCall;

  constructor(call: RegisterReferralCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class ResumeContractCall extends ethereum.Call {
  get inputs(): ResumeContractCall__Inputs {
    return new ResumeContractCall__Inputs(this);
  }

  get outputs(): ResumeContractCall__Outputs {
    return new ResumeContractCall__Outputs(this);
  }
}

export class ResumeContractCall__Inputs {
  _call: ResumeContractCall;

  constructor(call: ResumeContractCall) {
    this._call = call;
  }
}

export class ResumeContractCall__Outputs {
  _call: ResumeContractCall;

  constructor(call: ResumeContractCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class TransferCall extends ethereum.Call {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferCustomCall extends ethereum.Call {
  get inputs(): TransferCustomCall__Inputs {
    return new TransferCustomCall__Inputs(this);
  }

  get outputs(): TransferCustomCall__Outputs {
    return new TransferCustomCall__Outputs(this);
  }
}

export class TransferCustomCall__Inputs {
  _call: TransferCustomCall;

  constructor(call: TransferCustomCall) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferCustomCall__Outputs {
  _call: TransferCustomCall;

  constructor(call: TransferCustomCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferFromTeamVestingContractCall extends ethereum.Call {
  get inputs(): TransferFromTeamVestingContractCall__Inputs {
    return new TransferFromTeamVestingContractCall__Inputs(this);
  }

  get outputs(): TransferFromTeamVestingContractCall__Outputs {
    return new TransferFromTeamVestingContractCall__Outputs(this);
  }
}

export class TransferFromTeamVestingContractCall__Inputs {
  _call: TransferFromTeamVestingContractCall;

  constructor(call: TransferFromTeamVestingContractCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferFromTeamVestingContractCall__Outputs {
  _call: TransferFromTeamVestingContractCall;

  constructor(call: TransferFromTeamVestingContractCall) {
    this._call = call;
  }
}

export class UpdateNameAndSymbolCall extends ethereum.Call {
  get inputs(): UpdateNameAndSymbolCall__Inputs {
    return new UpdateNameAndSymbolCall__Inputs(this);
  }

  get outputs(): UpdateNameAndSymbolCall__Outputs {
    return new UpdateNameAndSymbolCall__Outputs(this);
  }
}

export class UpdateNameAndSymbolCall__Inputs {
  _call: UpdateNameAndSymbolCall;

  constructor(call: UpdateNameAndSymbolCall) {
    this._call = call;
  }

  get __name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get __symbol(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateNameAndSymbolCall__Outputs {
  _call: UpdateNameAndSymbolCall;

  constructor(call: UpdateNameAndSymbolCall) {
    this._call = call;
  }
}

export class UpdateUtilsContractsCall extends ethereum.Call {
  get inputs(): UpdateUtilsContractsCall__Inputs {
    return new UpdateUtilsContractsCall__Inputs(this);
  }

  get outputs(): UpdateUtilsContractsCall__Outputs {
    return new UpdateUtilsContractsCall__Outputs(this);
  }
}

export class UpdateUtilsContractsCall__Inputs {
  _call: UpdateUtilsContractsCall;

  constructor(call: UpdateUtilsContractsCall) {
    this._call = call;
  }

  get accessSettings(): Array<UpdateUtilsContractsCallAccessSettingsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      UpdateUtilsContractsCallAccessSettingsStruct
    >();
  }
}

export class UpdateUtilsContractsCall__Outputs {
  _call: UpdateUtilsContractsCall;

  constructor(call: UpdateUtilsContractsCall) {
    this._call = call;
  }
}

export class UpdateUtilsContractsCallAccessSettingsStruct extends ethereum.Tuple {
  get isMinter(): boolean {
    return this[0].toBoolean();
  }

  get isBurner(): boolean {
    return this[1].toBoolean();
  }

  get isTransferer(): boolean {
    return this[2].toBoolean();
  }

  get isModerator(): boolean {
    return this[3].toBoolean();
  }

  get isTaxer(): boolean {
    return this[4].toBoolean();
  }

  get addr(): Address {
    return this[5].toAddress();
  }
}
